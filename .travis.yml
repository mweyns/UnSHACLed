language: node_js
node_js:
  - stable

# Test on both Linux and Mac OS X
os:
  - linux
  - osx

dist: trusty
osx_image: xcode9.3beta
sudo: required

addons:
  sonarcloud:
    organization: dubious-developments
    token:
      secure: $SONARCLOUD_KEY
  firefox: "latest"
  chrome: stable
  apt:
    packages:
      # Install pip3 so we can install PyGitHub.
      - python3-pip

jdk:
  - oraclejdk8

install:
  # Install mono to run the Selenium tests.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF;
      sudo apt install apt-transport-https;
      echo "deb https://download.mono-project.com/repo/ubuntu stable-trusty main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list;
      sudo apt update;
      sudo apt install mono-devel mono-complete nuget;
    else
      brew update && brew install mono && brew install nuget;
    fi
  # Build sshpass 1.06 from source. We need it to deploy a nightly
  # build of UnSHACLed to the server.
  - wget https://netix.dl.sourceforge.net/project/sshpass/sshpass/1.06/sshpass-1.06.tar.gz
  - tar -xvzf sshpass-1.06.tar.gz
  - pushd sshpass-1.06; ./configure && sudo make install; popd
  # Install PyGitHub, which we need for adding comments to pull requests.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo pip3 install pygithub; fi
  # Install gulp.
  - npm install -g gulp
  # Install serve, which we'll need for running the Selenium tests.
  - npm install -g serve@6.5.3
  # Install npm dependencies.
  - npm install

script:
  # Compile sources. Assume that the project will be hosted locally.
  - PUBLIC_URL="." gulp lint build
  # Run the tests.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then XVFB_RUN=xvfb-run; fi
  - $XVFB_RUN gulp test
  # Run the Selenium tests. Go with Firefox and Chrome on both Linux and Mac OS X.
  - SELENIUM_BROWSERS="firefox chrome"
  # TODO: maybe try to add Safari on Mac OS X? Safari seems to run just fine,
  # but for some reason it can't find elements by their ID, causing the tests
  # to fail.
  # - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
  #     sudo safaridriver --enable;
  #     SELENIUM_BROWSERS="firefox chrome safari";
  #   else
  #     SELENIUM_BROWSERS="firefox chrome";
  #   fi
  - pushd selenium && make nuget && make && $XVFB_RUN make TEST_OPTIONS="--no-build-app --color --browsers $SELENIUM_BROWSERS" run && popd
  # Run SonarCloud, but only on Linux.
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ ! -z "$SONARCLOUD_KEY" ]; then sonar-scanner; fi
  # Deploy a nightly build when all tests are successful for a master branch commit.
  # Grab the server deployment script from the UnSHACLed waterfall repository and deploy.
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_BRANCH" == "master" ] && [ ! -z "$DEPLOY_USER" ]; then
      wget https://raw.githubusercontent.com/dubious-developments/UnSHACLed-waterfall/master/deploy-to-server.sh &&
      chmod +x deploy-to-server.sh &&
      ./deploy-to-server.sh $encrypted_077ce6e5a149_key $encrypted_077ce6e5a149_iv 8800 nightly UnSHACLed-nightly;
    fi
  # Deploy to GitHub pages. We'll treat pull requests and regular commits differently to
  # keep them from interfering with each other (we don't want a pull request to overwrite
  # the latest release candidate and vice-versa).
  - GH_PAGES_ACCESS_TOKEN=$(echo 283q094q462s547s8p43pr518p0r7oq90rq90r9s | tr '[N-ZA-Mn-za-m]' '[A-Za-z]');
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      python3 ci/deploy-to-gh-pages.py "$GH_PAGES_ACCESS_TOKEN";
    fi

cache:
  directories:
    - '$HOME/.sonar/cache'

env:
  global:
    - secure: iBp9wdVR5548N1je98RyDdaoAYrXA3+eNDZonGwdQx2Tl2TfNOJ96Updkttx5O55IttNbJVZ1YwGXjfcL+y/1hvbrOJwzoXzVIxhzUCX4FIC6B0xiJ2jTiWYn9r/eVvMbeNhc2FyS2eQKrP7snvi87xsI458mTdfJ0wx7Ly3nZtlp6R0aQj3e2C2IS/mrplgCBXeiz2ehApJLKC2RvNh9D42AGbwZXzoJwpgyj3dJRlx45WzB+xQI0N0VfawoYo5KZfXYNMLVXDUnUlK3pzNaeOBq+wnIsH4qlbd6eNOauZa54d0u7EZvEwfUI4+LC23w8tpkiGWET/feyVRqDUxcZU0weh0nf7Vv9f/16QWQhF5FYB8t696YX5gE3E74LoI/ugnKOxsLKwCzJxGMi93ifNVRkZy2oO/cXIvHfnaZHFD5zhWioeLhUvGZgQ7MUYEuN0DD6VsrV85oknBEYTdJpPW7fcMLEhW4JscrWf7mUDkI1e8mqH0Kw1YwZf2LaXzZ4SMxtbr4NEd3DQZ72uaPxupt8VvGWeO7X5zXGZw804wj/5Xu17GHKv1zXvlGCY1TvdVKuJ95Zokb6KyJBwdp+Kgb5r59naC94l+94gpVtWJr9ZhgJN8xTentFFTepxBn7M3lbxEcj7Og0rJIVmOlFcy6aTN2fYKMDY8r9VKUJw=
    - secure: ia6f1YBzRkaUVTQSfoeUDGMseFeLEP3cFafflZQt6ktdaMq/tVKGD+l9FzilFS1daLTE4XNims8cg9wBalvS4SxidEdbGx25zTkLplQ+zeGzWYNqqfArgtgzOpgDbr3x5R9YVOBqlJuLazx8jTT5/SLlGWsHrXaxH+7y5E14mNRcLjLuiLqCUyvqVOyel0DK7Yt1zegCKvcSNQf4TmBd8szA0D4MiMYc4AW/z4aFbbDNoCDg1jFFNnt9m96ocdLsKnekc/lvMytMgX9Ub4NBSNRwAdMlRcClyL7ptcLiX+AnLKuuS2aaHOO2boZYM+vw/0yYtwLhAP+kdyzmTudX0A9GvqtSH1hsjdwll7utY+NNAsB3d6g5PIVjC7Lx/OVQ0dT4np6TKlR/aHIfZNU+co3SpvCdgHDChWMeSWonfritECUYHhu+AcaYCoxy416gT/jQWPmq90Iz1nUas7RqcFHDaKoRc2LXZ2kFZTsfIdEPvThoSbDAWeIREOtwYTt+3TRmqSVyTPSPSv0xPyakPxW2CnsSr6F8GAb9IOgyJ8Cab0j0eO2KkcfZ+byjgSU7n4lIVhAg5GD/TLQUTOPjCIv7GXCKE4WnQ7orPA6zSMTU12OQNUaNbZQaJ53k2B91W4ZH3gxAja3E5Tom6qmxc2KnkJfCHjmHrJL/TnRWfKM=
    - secure: JU8mXW/pMUr/geutFr1YqYLS8StzfOE0+35Ij8YrKRIt1C+lNW+dpLawp4NRJHuxzJIatT3BQX8v5gD8Ep9m5vVN+2J8ZnD1jWzOJDkz7CK+2NZbwnPSoGF6cIGOVrF2UNf/z/Xd5zOGfDrdKlC+ekY5i0euzQF7338ocpiS00+gfqsodRHn6gPbZCYDfjxKqAO603kO2X7fQmwDnAOeLrGk1NhmXoQXVE2epa4R8TozPR8j+Jbgdeh0PvgKOA7yahA/lLN8FayxXT9HhwxgHMyGolJPwyphtNaQ/EQZjXeUfL21xwpsaGb+2LtNYN5dfc3B/Sb1hbdbZ/g9G6OjEOH4V/bET1AissrN/c30QYtexarR7dBtqKm6PCYZdAScL1/M7I1MOmrI/zQXOLv5pJvzd5hQK8deU29ALZ2nIuLmG3CsinQGIO+oEUxeh1SA5OdixYxgqv1mzOUrI/MDE1bG9/O91l019nwa6ToXF6uls9hLra7jIIrbkrdo10/k2gn6eCKfX28iGz7nldGJExGuCASB1ULQJ10IjloczGLpj8b5DaEgob03aMw6rOSKsnauw0zSR9X9CJWfeE2iDOPuCFkLosAPF5ZqDiq+cav1M8V+HNGaxP7n5SdromyufDtAbxGzOg8lo/AWmD017U70Dp0/dGJfgRpTGW8yn8M=
    - secure: T2ztijijhzjyN+4U46uPILAgjk0a70GWk/a9sQPTJR9YYDIFuOTh2isNE+58XIIrr2RVKIR1a1B0nIuzecTYmSy46dII5mWIZJasYeFH2W1ah4WYaKsGbpvW3DmBgyVtiYmrusWq38kg0D0uen36vIjUD+uarhVieuSSY9WINRRrbq+4cEctRuYQtZeyxtaF8rpY1KDFlXPXVUCtg7FSqg+jgENL5Nm7o5A+Pw19MiNss8BTExFM+Hd8zgB3oVTRUW5FuqMVhRo6Qr+eoxexYrQsP5Eu5ErnkHkAt9Ugi4wvJoDRBtMcr/PQgJoFaCEt9toSJyt3u8uH7fXMw1fP3Ccr4vdITYcnbBcbP27C5PZEmPS35h0/uAs+PWQpc2Cnc3+hXtKb7U8dA13rcgyKrZoaLw0U1tpiSKCwFTQieIj0zxoZdDwWIKeKMxChm94Hbn+1bIF3KNCOUKN8yJjVEfdgO/ieTceLJGwdvYdu7QISaz9RDiRTtGPQ5Fu5PAuzLu6LKEhrlk8qDSQVmm0zAq8FWv4N7PgGU1FvwCk+tqOP38Gi+2PbuG2KMAQFFOAD/UlEpGWR0/7Q7bRp/sVr1oDaq2i66saq8tD8AfZ6aSlaFmOYLIn/o6cW5ehlavwM9rU2HJ5t3gWczx/S6ZRMsbCFKtZwoYb8XJE54P4vJBg=
    - secure: mQcPbjNzP5byoKdnlAyQ+xUQP7LkH9AQVa/Cx0XzH1aORJGvBbKz1G3oCEgszOY6NZm6cs0RVDxLx6rFwOfbdHUlLytIcVXvH4Jf1r9ARVOKmaV8RFS+4eYKzOcAZY5M+hy4+F/me/JFle1t1R262KGPXowT/vSsL29wXSAd0/rLvW1p1NDB1LSrA3+34XWGv2h+cniDPePAwjdACQUpPv6Mv/BN8AkRHu4rddbtehB8IKNtbbAF1RnGZ7kavf3CKxcPXyeWjg6G4eTHUXKQGJOb0yGlhq2oI989fkS7//iFoUAcvVrckOocp4G32vIXzZn1azOM3Hl9n5H/aJkYnYryo8vzff3WVMJQWG+P8oaa+/LNAaLqiPGRXLK0bBZ+5PYavt4siWkfS+vn4BQPeuynhDQ5X/kwLMotF+4+pCCASrLxTQdTlzIJBsoDAV1gpobEWknSfmOZvvXpvo+QNlf7cinE1NBtubYz0TbPsViBOudwnAGG0RxPauxgoTOGMYnI6sD9zAtGNXipfLUjjQGMFOQHT85KlWF+1xnd9DA5Ncqf/d/uELZkZK/JhfL5BvZgVh+T5mr/vLXL7OY3h/YOg3Jfe+fI6OCJI6wNnrSQGrg2NbLIvjvgr2aOns+MFpPJPaG/dxurLmpY6EdD349PVmSi5hBoj5Aredx5QDU=
    - secure: srAz/wOso8JyIX1wNCQa7DdgVouoYQQT9oJ3daT7vcoxN2wxY2LXA2wNrbKhTe4TpSDLhA9z1REC4g8mQVUOB+tJQKzjX5KfIBUIgLxs9oR6FBp1LoxmiQ3MgxWG+v1Y0vaMOhy9xmSPNmhHHOFKHV+5WXAF8sSeMmFraShaM5ehKYXTAfDmSjZLtrRHsewpAa5btkAFBRRJ0wSccLs6rxIK8U8M1y84vt4oWH+ZH6hg23mheR44L7RsH2PEjXlGIRpkSkBADtH3Wf7lUpUpJbque5C1IiHf0pq9w27Gs8GLlLsKfKBZH1tmJ6siIzi9O1bMqnpvNuJCDyGA+EVXUNbxsWbt+FNQPlByGVdt+59meZyT8rBZL3t1h96YC9WO3+fduIayZU/wSLddEfHP3w/HJtG9y9mSVohaxdT7FgP7otHw3y3EXryFw0tfc++1r9JxA7+sOYwrKcdTuYchmTcfrq6qa+SN0EiR3HzFeSpdVSUK1Q/KnC4E0EVwSwwz6y0WhxVO+q5ucU6vGchyoUbx+QzVmnlPQ8HOLBKpMW7N0mr5dEva7byyo358FYlTU18lCTp1lDcpJOyogGRM3WXaWH2YPNeNsJ31ONxKJX+Zv63u2mYKyo+rYdFx/WNvjYQFpotxacM9RAGOHVjBIllHxJYDjT1wfNXMud1KdHE=
